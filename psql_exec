#!/bin/bash


### TODO:
### write documentation
### add argment parsing

set -ex
owner="soatsa"
user="postgres"
db_name="soasta_repository"
psql_call=" psql -U $user -d $db_name"

case "$1" in
    "add_entry")
	echo "Adding new command $2"
	name="$2"
	command="$3"
	echo 
	;;
    "get_local_repo_path")
	
	
	t=`${psql_call} -c "select localrepositorypath from vcsrepository where id in (select vcsrepositoryid from vcsfile where id in (select vcsfileid from folderitem where id=$2));" | sed -n '3'p` 
	echo $t
	;;

    "export_database")
	# Option one: ssh
	# TODO: parametrize host 
	db_name="$2"
	remote_host="lpolyudova@liza-mac.local"
	remote_location="/Users/lpolyudova/Documents/db_backups/"
	new_db_name=$db_name-$RANDOM
	pg_dump -U "$user" -d "$db_name" | gzip > ${new_db_name}.sql.gz
	scp ${new_db_name}.sql.gz $remote_host:$remote_location
 	rm ${new_db_name}.sql.gz
	ssh $remote_host  psql_exec import_database  ${new_db_name}
	;;
    
    "import_database")
	cd $remote_location
	createdb -U $user $db_name -O $owner
	gunzip < ${new_db_name}.sql.gz | psql -U $user $db_name
 	rm ${new_db_name}.sql.gz	
	   ;;

    "list")
	   echo "get_local_repo_path {folder_id}\n export_database {name, %ssh?optional}"
	   
	;;

    *)
	echo "Fuction not found"
	;;
esac
